[user]
    name = tanjo
    email = tanjo@users.noreply.github.com
[color]
    ui = auto
[core]
    excludesfile = ~/.gitignore
[alias]
    again = commit --amend -a --no-edit
    back = reset --soft HEAD~
    logs = shortlog
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    lga = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    pullreq = checkout -t
    pushu = push -u
    update = remote update
    u = remote update
    s = status
    ss = status -sb
    sta = status
    staus = status
    taus = status
    ta = status
    d = diff --word-diff
    b = branch
    bv = branch -v
    c = checkout
    pod = pull origin develop
    sb = show-branch
    st = !git status -s && git stash list | cat
    cfm = !git sb && git b && git st
    submodinit = submodule update --init --recursive
    dd = !git diff `git show-branch --merge-base develop HEAD` HEAD
    pure = pull --rebase
    pured = pull --rebase origin develop
    uncommit = reset HAED^
    recommit = commit -c ORIG_HEAD
    w = browse
    wi = browse -- issues
    features = "!f() { git fetch; git checkout -b features/$1 origin/develop; }; f"
    issues = "!f() { git fetch; git checkout -b issues/$1 origin/develop; }; f"
    fd = "!f() { git diff $(git rev-list -n 1 HEAD -- $1)^ -- $1; }; f"
    search-all = "!f() { git grep $1 $(git rev-list --all); }; f"
    search = "!f() { git grep $1 $(git rev-list HEAD...HEAD~); }; f"
    addnewonly = "!f() { git add $(git ls-files -o --exclude-standard); }; f"
    adddiff = "!f() { git diff $(git rev-parse --abbrev-ref @)..$1 | git apply; }; f"
    diffstash=diff stash@{0}